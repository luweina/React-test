{"version":3,"sources":["components/Form.js","components/FilterButton.js","components/Todo.js","components/Clear.js","components/theme-context.js","components/Home.js","components/About.js","components/error.js","components/nav.js","components/ApiData.js","App.js","index.js"],"names":["Form","props","useState","name","setName","onSubmit","e","preventDefault","trim","addTask","className","htmlFor","type","id","placeholder","autoComplete","value","onChange","target","data-testid","FilterButton","aria-pressed","isPressed","onClick","setFilter","Todo","isEditing","setEditing","newName","setNewName","editFieldRef","useRef","editButtonRef","wasEditing","ref","useEffect","current","usePrevious","editingTemplate","editTask","viewTemplate","defaultChecked","completed","toggleTaskCompleted","deleteTask","focus","clearButton","clear","themes","color","background","ThemeContext","React","createContext","DATA","FILTER_MAP","All","Active","task","Completed","FILTER_NAMES","Object","keys","Home","theme","useContext","tasks","setTasks","filter","updatedTasks","map","remainingTasks","editedTaskList","localStorage","getItem","JSON","parse","setItem","stringify","taskList","key","filterList","tasksNoun","length","headingText","listHeadingRef","prevTaskLength","style","newTask","nanoid","tabIndex","role","aria-labelledby","Clear","aboutPage","errorPage","NavBar","to","ApiData","posts","setPost","axios","get","then","res","console","log","data","catch","error","post","title","alt","src","url","App","setTheme","Provider","path","component","exact","about","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.31ec86f4.chunk.js","sourcesContent":["import React, { useState, useEffect } from \"react\";\n\nfunction Form(props) {\n  const [name, setName] = useState('');\n\n\n\n\n  function handleSubmit(e) {\n    e.preventDefault();\n    if (!name.trim()) {\n      return;\n    }\n    props.addTask(name);\n    setName(\"\");\n\n  }\n\n\n\n  function handleChange(e) {\n    setName(e.target.value);\n  }\n\n  return (\n    <form onSubmit={handleSubmit}>\n      <h2 className=\"label-wrapper\">\n        <label htmlFor=\"new-todo-input\" className=\"label__lg\">\n          What needs to be done?\n        </label>\n      </h2>\n\n      <input\n        type=\"text\"\n        id=\"new-todo-input\"\n        className=\"input input__lg\"\n        placeholder=\"Enter somethings\"\n        name=\"text\"\n        autoComplete=\"off\"\n        value={name}\n        onChange={handleChange}\n      />\n      <button data-testid = \"hi\" type=\"submit\" className=\"btn btn__primary btn__lg\">\n        Add\n      </button>\n    </form>\n  );\n}\n\nexport default Form;\n","import React from \"react\";\n\nfunction FilterButton(props) {\n \n  return (\n    <button\n      type=\"button\"\n      className=\"btn toggle-btn\"\n      aria-pressed={props.isPressed}\n      onClick={() => props.setFilter(props.name)}\n    >\n      <span className=\"visually-hidden\">Show </span>\n      <span>{props.name}</span>\n      <span className=\"visually-hidden\"> tasks</span>\n    </button>\n  );\n}\n\nexport default FilterButton;\n","import React, { useEffect, useRef, useState } from \"react\";\n\n\nfunction usePrevious(value) {\n  const ref = useRef();\n  useEffect(() => {\n    ref.current = value;\n  });\n  return ref.current;\n}\n\nexport default function Todo(props) {\n  const [isEditing, setEditing] = useState(false);\n  const [newName, setNewName] = useState('');\n\n  const editFieldRef = useRef(null);\n  const editButtonRef = useRef(null);\n\n  const wasEditing = usePrevious(isEditing);\n\n  function handleChange(e) {\n    setNewName(e.target.value);\n  }\n\n  function handleSubmit(e) {\n    e.preventDefault();\n    if (!newName.trim()) {\n      return;\n    }\n    props.editTask(props.id, newName);\n    setNewName(\"\");\n    setEditing(false);\n  }\n\n  const editingTemplate = (\n    <form className=\"stack-small\" onSubmit={handleSubmit}>\n      <div className=\"form-group\">\n        <label className=\"todo-label\" htmlFor={props.id}>\n          New name for {props.name}\n        </label>\n        <input\n          id={props.id}\n          className=\"todo-text\"\n          type=\"text\"\n          value={newName}\n          onChange={handleChange}\n          ref={editFieldRef}\n        />\n      </div>\n      <div className=\"btn-group\">\n\n        <button\n          type=\"button\"\n          className=\"btn todo-cancel\"\n          onClick={() => setEditing(false)}\n        >\n          Cancel\n          <span className=\"visually-hidden\">renaming {props.name}</span>\n        </button>\n        <button type=\"submit\" className=\"btn btn__primary todo-edit\">\n          Save\n          <span className=\"visually-hidden\">new name for {props.name}</span>\n        </button>\n      </div>\n    </form>\n  );\n\n  const viewTemplate = (\n    <div className=\"stack-small\">\n      <div className=\"c-cb\">\n          <input\n            id={props.id}\n            type=\"checkbox\"\n            defaultChecked={props.completed}\n            onChange={() => props.toggleTaskCompleted(props.id)}\n          />\n          <label className=\"todo-label\" htmlFor={props.id}>\n            {props.name}\n          </label>\n        </div>\n        <div className=\"btn-group\">\n        <button\n          type=\"button\"\n          className=\"btn\"\n          onClick={() => setEditing(true)}\n          ref={editButtonRef}\n          >\n            Edit <span className=\"visually-hidden\">{props.name}</span>\n          </button>\n          <button\n            type=\"button\"\n            className=\"btn btn__danger\"\n            onClick={() => props.deleteTask(props.id)}\n          >\n            Delete <span className=\"visually-hidden\">{props.name}</span>\n          </button>\n        </div>\n    </div>\n  );\n\n\n  useEffect(() => {\n    if (!wasEditing && isEditing) {\n      editFieldRef.current.focus();\n    }\n    if (wasEditing && !isEditing) {\n      editButtonRef.current.focus();\n    }\n  }, [wasEditing, isEditing]);\n\n\n  return <li className=\"todo\">{isEditing ? editingTemplate : viewTemplate}</li>;\n}\n","import React from \"react\";\n\nconst clearButton = (props) => {\n    function handleClick(e) {\n        props.clear();\n      }\n\n    return (\n        <button\n            type=\"button\"\n            className=\"btn toggle-btn\"\n            onClick={handleClick}>\n\n                <span>Clear</span>\n\n\n        </button>\n\n\n\n      );\n}\n\nexport default clearButton","\nimport React from 'react'\n\n\nexport const themes = {\n    dark: {\n        color: 'white',\n        background: 'black'\n    },\n    light: {\n        color: 'black',\n        background: 'white'\n    }\n}\n\nconst ThemeContext = React.createContext(themes.dark)\n\nexport default ThemeContext;","import React, { useState, useRef, useEffect, useContext } from \"react\";\nimport Form from \"./Form\";\nimport FilterButton from \"./FilterButton\";\nimport Todo from \"./Todo\";\nimport { nanoid } from \"nanoid\";\nimport ClearButton from \"./Clear\";\nimport ThemeContext, { themes } from \"./theme-context\"\n\nconst DATA = [];\nfunction usePrevious(value) {\n  const ref = useRef();\n  useEffect(() => {\n    ref.current = value;\n  });\n  return ref.current;\n}\n\nconst FILTER_MAP = {\n  All: () => true,\n  Active: (task) => !task.completed,\n  Completed: (task) => task.completed,\n};\n\nconst FILTER_NAMES = Object.keys(FILTER_MAP);\n\nfunction Home(props) {\n    const theme = useContext(ThemeContext)\n//   const [theme, setTheme] = useState (themes.light)\n  const [tasks, setTasks] = useState(DATA);\n  const [filter, setFilter] = useState(\"All\");\n\n\n  useEffect(() => {\n    if (localStorage.getItem(\"listofData\")) {\n      setTasks(JSON.parse(localStorage.getItem(\"listofData\")));\n    }\n  }, []);\n\n  useEffect(() => {\n    localStorage.setItem(\"listofData\", JSON.stringify(tasks));\n  }, [tasks]);\n\n  const clearTasks = () => {\n    localStorage.clear();\n    setTasks(DATA);\n  };\n\n  function toggleTaskCompleted(id) {\n    const updatedTasks = tasks.map((task) => {\n      // if this task has the same ID as the edited task\n      if (id === task.id) {\n        // use object spread to make a new obkect\n        // whose `completed` prop has been inverted\n        return { ...task, completed: !task.completed };\n      }\n      return task;\n    });\n    setTasks(updatedTasks);\n  }\n\n  function deleteTask(id) {\n    const remainingTasks = tasks.filter((task) => id !== task.id);\n    setTasks(remainingTasks);\n  }\n\n  function editTask(id, newName) {\n    const editedTaskList = tasks.map((task) => {\n      // if this task has the same ID as the edited task\n      if (id === task.id) {\n        //\n        return { ...task, name: newName };\n      }\n      return task;\n    });\n    setTasks(editedTaskList);\n  }\n\n  const taskList = tasks\n    .filter(FILTER_MAP[filter])\n    .map((task) => (\n      <Todo\n        id={task.id}\n        name={task.name}\n        completed={task.completed}\n        key={task.id}\n        toggleTaskCompleted={toggleTaskCompleted}\n        deleteTask={deleteTask}\n        editTask={editTask}\n      />\n    ));\n\n  const filterList = FILTER_NAMES.map((name) => (\n    <FilterButton\n      key={name}\n      name={name}\n      isPressed={name === filter}\n      setFilter={setFilter}\n    />\n  ));\n\n  function addTask(name) {\n    const newTask = { id: \"todo-\" + nanoid(), name: name, completed: false };\n    setTasks([...tasks, newTask]);\n  }\n\n  const tasksNoun = taskList.length !== 1 ? \"tasks\" : \"task\";\n  const headingText = `${taskList.length} ${tasksNoun} remaining`;\n\n  const listHeadingRef = useRef(null);\n  const prevTaskLength = usePrevious(tasks.length);\n\n  useEffect(() => {\n    if (tasks.length - prevTaskLength === -1) {\n      listHeadingRef.current.focus();\n    }\n  }, [tasks.length, prevTaskLength]);\n\n  return (\n\n    <div className=\"todoapp stack-large\" style = {theme}>\n        \n      <Form addTask={addTask} />\n      <div className=\"filters btn-group stack-exception\">{filterList}</div>\n      <h2 id=\"list-heading\" tabIndex=\"-1\" ref={listHeadingRef}>\n        {headingText}\n      </h2>\n      <ul\n        role=\"list\"\n        className=\"todo-list stack-large stack-exception\"\n        aria-labelledby=\"list-heading\"\n      >\n        {taskList}\n      </ul>\n      <ClearButton clear={clearTasks} />\n    </div>\n  );\n}\n\nexport default Home;\n","import React from 'react'\n\nfunction aboutPage(props) {\n\n    return (\n      <p>This is a about page</p>\n    );\n  }\n\n  export default aboutPage;","import React from 'react'\n\nfunction errorPage(props) {\n\n    return (\n        <h1>Oops!Pagenotfound!</h1>\n    );\n  }\n\n  export default errorPage;","import React from \"react\";\nimport { Link } from \"react-router-dom\";\n\nfunction NavBar() {\n  return (\n    <nav>\n      <ul>\n        <Link to ='/'>\n          <li>home</li>\n        </Link>\n\n        <Link to ='/about'>\n          <li>about</li>\n        </Link>\n        <Link to ='/api'>\n          <li>API</li>\n        </Link>\n      </ul>\n    </nav>\n  );\n}\n\nexport default NavBar;\n","import React, {useState, useEffect} from 'react'\nimport axios from 'axios'\nexport const ApiData = () => {\n    const [posts, setPost] = useState([])\n    useEffect(() => {\n        axios.get('https://jsonplaceholder.typicode.com/photos/?_limit=10').then (res => {\n            console.log (res)\n            setPost(res.data)\n        }).catch(error => {\n            console.log(error)\n        })\n    }, [])\n    return (\n        <div>\n            <ul>\n                {\n                      posts.map(post => <li key = {post.id}>{post.id}{post.title} <img alt = '' src = {post.url}></img> </li>)\n\n                }\n               \n\n            </ul>\n\n        </div>\n    )\n}\n\nexport default ApiData\n","import React, {useState} from \"react\";\nimport Home from \"./components/Home\";\nimport about from \"./components/About\";\nimport error from \"./components/error\";\nimport NavBar from \"./components/nav\";\nimport { Route, Switch } from \"react-router-dom\";\nimport ThemeContext, { themes } from \"./components/theme-context\";\nimport ApiData from \"./components/ApiData\"\n\nfunction App(props) {\n  const [theme, setTheme] = useState(themes.dark)\n  const toggleThemes = () => {\n    theme === themes.dark\n    ? setTheme(themes.light)\n    : setTheme(themes.dark)\n  }\n  return (\n    <div className=\"todoapp stack-large\">\n      <ThemeContext.Provider value = {theme}>\n      <button onClick={toggleThemes}>Change Theme</button>\n        <NavBar />\n        <Switch>\n          <Route path=\"/\" component={Home} exact />\n          <Route path=\"/about\" component={about} />\n          <Route path=\"/api\" component={ApiData} />\n          <Route component={error} />\n\n        </Switch>\n      </ThemeContext.Provider>\n    </div>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from './App'\nimport { BrowserRouter } from 'react-router-dom';\n\n\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter>\n      <App />\n    </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}