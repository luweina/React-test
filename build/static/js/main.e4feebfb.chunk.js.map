{"version":3,"sources":["components/Form.js","components/FilterButton.js","components/Todo.js","App.js","index.js"],"names":["Form","props","useState","name","setName","onSubmit","e","preventDefault","trim","addTask","className","htmlFor","type","id","placeholder","autoComplete","value","onChange","target","data-testid","FilterButton","aria-pressed","isPressed","onClick","setFilter","Todo","isEditing","setEditing","newName","setNewName","editFieldRef","useRef","editButtonRef","wasEditing","ref","useEffect","current","usePrevious","editingTemplate","editTask","viewTemplate","defaultChecked","completed","toggleTaskCompleted","deleteTask","focus","FILTER_MAP","All","Active","task","Completed","FILTER_NAMES","Object","keys","App","tasks","setTasks","filter","updatedTasks","map","remainingTasks","editedTaskList","taskList","key","filterList","tasksNoun","length","headingText","listHeadingRef","prevTaskLength","newTask","nanoid","tabIndex","role","aria-labelledby","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.e4feebfb.chunk.js","sourcesContent":["import React, { useState } from \"react\";\n\nfunction Form(props) {\n  const [name, setName] = useState('');\n\n\n  function handleSubmit(e) {\n    e.preventDefault();\n    if (!name.trim()) {\n      return;\n    }\n    props.addTask(name);\n    setName(\"\");\n  }\n\n\n  function handleChange(e) {\n    setName(e.target.value);\n  }\n\n  return (\n    <form onSubmit={handleSubmit}>\n      <h2 className=\"label-wrapper\">\n        <label htmlFor=\"new-todo-input\" className=\"label__lg\">\n          What needs to be done?\n        </label>\n      </h2>\n\n      <input\n        type=\"text\"\n        id=\"new-todo-input\"\n        className=\"input input__lg\"\n        placeholder=\"Enter somethings\"\n        name=\"text\"\n        autoComplete=\"off\"\n        value={name}\n        onChange={handleChange}\n      />\n      <button data-testid = \"hi\" type=\"submit\" className=\"btn btn__primary btn__lg\">\n        Add\n      </button>\n    </form>\n  );\n}\n\nexport default Form;\n","import React from \"react\";\n\nfunction FilterButton(props) {\n  return (\n    <button\n      type=\"button\"\n      className=\"btn toggle-btn\"\n      aria-pressed={props.isPressed}\n      onClick={() => props.setFilter(props.name)}\n    >\n      <span className=\"visually-hidden\">Show </span>\n      <span>{props.name}</span>\n      <span className=\"visually-hidden\"> tasks</span>\n    </button>\n  );\n}\n\nexport default FilterButton;\n","import React, { useEffect, useRef, useState } from \"react\";\n\n\nfunction usePrevious(value) {\n  const ref = useRef();\n  useEffect(() => {\n    ref.current = value;\n  });\n  return ref.current;\n}\n\nexport default function Todo(props) {\n  const [isEditing, setEditing] = useState(false);\n  const [newName, setNewName] = useState('');\n\n  const editFieldRef = useRef(null);\n  const editButtonRef = useRef(null);\n\n  const wasEditing = usePrevious(isEditing);\n\n  function handleChange(e) {\n    setNewName(e.target.value);\n  }\n\n  function handleSubmit(e) {\n    e.preventDefault();\n    if (!newName.trim()) {\n      return;\n    }\n    props.editTask(props.id, newName);\n    setNewName(\"\");\n    setEditing(false);\n  }\n\n  const editingTemplate = (\n    <form className=\"stack-small\" onSubmit={handleSubmit}>\n      <div className=\"form-group\">\n        <label className=\"todo-label\" htmlFor={props.id}>\n          New name for {props.name}\n        </label>\n        <input\n          id={props.id}\n          className=\"todo-text\"\n          type=\"text\"\n          value={newName}\n          onChange={handleChange}\n          ref={editFieldRef}\n        />\n      </div>\n      <div className=\"btn-group\">\n\n        <button\n          type=\"button\"\n          className=\"btn todo-cancel\"\n          onClick={() => setEditing(false)}\n        >\n          Cancel\n          <span className=\"visually-hidden\">renaming {props.name}</span>\n        </button>\n        <button type=\"submit\" className=\"btn btn__primary todo-edit\">\n          Save\n          <span className=\"visually-hidden\">new name for {props.name}</span>\n        </button>\n      </div>\n    </form>\n  );\n\n  const viewTemplate = (\n    <div className=\"stack-small\">\n      <div className=\"c-cb\">\n          <input\n            id={props.id}\n            type=\"checkbox\"\n            defaultChecked={props.completed}\n            onChange={() => props.toggleTaskCompleted(props.id)}\n          />\n          <label className=\"todo-label\" htmlFor={props.id}>\n            {props.name}\n          </label>\n        </div>\n        <div className=\"btn-group\">\n        <button\n          type=\"button\"\n          className=\"btn\"\n          onClick={() => setEditing(true)}\n          ref={editButtonRef}\n          >\n            Edit <span className=\"visually-hidden\">{props.name}</span>\n          </button>\n          <button\n            type=\"button\"\n            className=\"btn btn__danger\"\n            onClick={() => props.deleteTask(props.id)}\n          >\n            Delete <span className=\"visually-hidden\">{props.name}</span>\n          </button>\n        </div>\n    </div>\n  );\n\n\n  useEffect(() => {\n    if (!wasEditing && isEditing) {\n      editFieldRef.current.focus();\n    }\n    if (wasEditing && !isEditing) {\n      editButtonRef.current.focus();\n    }\n  }, [wasEditing, isEditing]);\n\n\n  return <li className=\"todo\">{isEditing ? editingTemplate : viewTemplate}</li>;\n}\n","import React, { useState, useRef, useEffect } from \"react\";\nimport Form from \"./components/Form\";\nimport FilterButton from \"./components/FilterButton\";\nimport Todo from \"./components/Todo\";\nimport { nanoid } from \"nanoid\";\n\n\nfunction usePrevious(value) {\n  const ref = useRef();\n  useEffect(() => {\n    ref.current = value;\n  });\n  return ref.current;\n}\n\nconst FILTER_MAP = {\n  All: () => true,\n  Active: task => !task.completed,\n  Completed: task => task.completed\n};\n\nconst FILTER_NAMES = Object.keys(FILTER_MAP);\n\nfunction App(props) {\n  const [tasks, setTasks] = useState(props.tasks);\n  const [filter, setFilter] = useState('All');\n\n  function toggleTaskCompleted(id) {\n    const updatedTasks = tasks.map(task => {\n      // if this task has the same ID as the edited task\n      if (id === task.id) {\n        // use object spread to make a new obkect\n        // whose `completed` prop has been inverted\n        return {...task, completed: !task.completed}\n      }\n      return task;\n    });\n    setTasks(updatedTasks);\n  }\n\n\n  function deleteTask(id) {\n    const remainingTasks = tasks.filter(task => id !== task.id);\n    setTasks(remainingTasks);\n  }\n\n\n  function editTask(id, newName) {\n    const editedTaskList = tasks.map(task => {\n    // if this task has the same ID as the edited task\n      if (id === task.id) {\n        //\n        return {...task, name: newName}\n      }\n      return task;\n    });\n    setTasks(editedTaskList);\n  }\n\n  const taskList = tasks\n  .filter(FILTER_MAP[filter])\n  .map(task => (\n    <Todo\n      id={task.id}\n      name={task.name}\n      completed={task.completed}\n      key={task.id}\n      toggleTaskCompleted={toggleTaskCompleted}\n      deleteTask={deleteTask}\n      editTask={editTask}\n    />\n  ));\n\n  const filterList = FILTER_NAMES.map(name => (\n    <FilterButton\n      key={name}\n      name={name}\n      isPressed={name === filter}\n      setFilter={setFilter}\n    />\n  ));\n\n  function addTask(name) {\n    const newTask = { id: \"todo-\" + nanoid(), name: name, completed: false };\n    setTasks([...tasks, newTask]);\n  }\n\n\n  const tasksNoun = taskList.length !== 1 ? 'tasks' : 'task';\n  const headingText = `${taskList.length} ${tasksNoun} remaining`;\n\n  const listHeadingRef = useRef(null);\n  const prevTaskLength = usePrevious(tasks.length);\n\n  useEffect(() => {\n    if (tasks.length - prevTaskLength === -1) {\n      listHeadingRef.current.focus();\n    }\n  }, [tasks.length, prevTaskLength]);\n\n  return (\n    <div className=\"todoapp stack-large\">\n      <Form addTask={addTask} />\n      <div className=\"filters btn-group stack-exception\">\n        {filterList}\n      </div>\n      <h2 id=\"list-heading\" tabIndex=\"-1\" ref={listHeadingRef}>\n        {headingText}\n      </h2>\n      <ul\n        role=\"list\"\n        className=\"todo-list stack-large stack-exception\"\n        aria-labelledby=\"list-heading\"\n      >\n        {taskList}\n      </ul>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\n\nconst DATA = [\n  { id: \"todo-0\", name: \"Eat\", completed: true },\n  { id: \"todo-1\", name: \"Sleep\", completed: false },\n  { id: \"todo-2\", name: \"Repeat\", completed: false }\n];\n\nReactDOM.render(\n  <React.StrictMode>\n    <App tasks={DATA} />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}